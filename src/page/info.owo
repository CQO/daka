<template lang="pug">
.info-page
  //- 头图
  img.main-image(src="@|top-bar.jpg|")
  .conn
    .card
      .title-bar
        h2
        h3 
      .info
      .progress-box
        .progress
    //- 用户展示
    .user-show.card
      span
      .user-image-box
        img(src="@|user.svg|")
        img(src="@|user.svg|")
        img(src="@|user.svg|")
        img(src="@|user.svg|")
        img(src="@|user.svg|")
    //- 设置挑战金额
    .join-card.card
      .title(font="FZLTCHJW.TTF") 可选挑战金额:
      .set-money
        span(o-tap="changeNumber(5)" o-class-active="this.data.joinMoney == 5") 5元
        span(o-tap="changeNumber(50)" o-class-active="this.data.joinMoney == 50") 50元
        span(o-tap="changeNumber(500)" o-class-active="this.data.joinMoney == 500") 500元
        span(o-tap="changeNumber(5000)" o-class-active="this.data.joinMoney == 5000") 5000元
    //- 参加按钮
    .join-button(o-tap="joinGame") 参与挑战
    .daka-button.captcha-button(data-appid="2092617728" data-cbfn="owo.script.info.dakaCallBack") 立即打卡
    .no-button
    //- 今日打卡进度
    .other-people.card
      .other-title-bar
        h2(font="FZLTCHJW.TTF") 今日打卡战况
        span 
      ul
        li.fastest
          .left
            img(src="@|user.svg|")
            span 打卡之星
            .name 招财进宝
          .right 06:00:03打卡
        li.money
          .left
            img(src="@|user.svg|")
            span(style=" background-color: darkgoldenrod;") 奖励之星
            .name 招财进宝
          .right 0.52元
        li.last
          .left
            img(src="@|user.svg|")
            span(style=" background-color: chartreuse;") 惊险之星
            .name 招财进宝
          .right 连续打卡400次
</template>

<script>
  module.exports = {
    data: {
      joinMoney: 5,
      roomName: ''
    },
    created: function () {
      // 注册腾讯验证按钮
      this.queryAll('.captcha-button').forEach(element => {
        new TencentCaptcha(element)
      })
    },
    show: function () {
      // 获取房间信息
      const roomID = _owo.getQueryVariable().id 
      getData(`getRoomInfo?roomID=${roomID}`, (data) => {
        // 打卡时间
        let dakaTime = JSON.parse(data.daka_time)
        this.data.roomName = data.name
        this.query('.title-bar h2').innerText = data.name
        this.query('.title-bar h3').innerHTML = `当前挑战金额 <span>${data.money}</span> 元`
        // 成功人数和失败人数
        this.query('.other-title-bar span').innerText = `${data.success_num || 0} 人成功 | ${data.fail_num || 0} 人失败`
        // 计算进度条进度
        this.query('.progress').style.width = (data.clock_days / data.avtive_days) * 100 + '%'
        // 参加人数
        let joinPeopleListText = data.join_people || '{}'
        let joinPeopleList = JSON.parse(joinPeopleListText)
        let joinNum = Object.keys(joinPeopleList).length
        this.query('.user-show span').innerText = `当前有${joinNum}人参与打卡`
        // 判断是否已经打过卡了
        if (!data.daka_list) data.daka_list = '{}'
        let dakaList = JSON.parse(data.daka_list)
        if (!dakaList) dakaList = {}
        // 判断是否有人参与
        if (data.daka_list !== '{}') {
          // 判断打卡成功失败人数
          let successNum = 0
          // 最先打卡者
          let fastestPeople = {
            time: Infinity,
          }
          let moneyPeople = {
            money: 0,
          }
          let lastPeople = {
            time: 0
          }
          for (const key in dakaList) {
            if (dakaList.hasOwnProperty(key)) {
              const element = dakaList[key];
              element.id = key
              if (element.time < fastestPeople.time) {
                fastestPeople = element
              }
              if (element.time > lastPeople.time) {
                lastPeople = element
              }
              if (joinPeopleList[key].money > moneyPeople.money) {
                element.money = joinPeopleList[key].money
                moneyPeople = element
              }
              // 增加打卡人数
              successNum++
            }
          }
          // 最快的人
          this.query('.fastest .name').innerText = fastestPeople.name
          this.query('.fastest .right').innerText = dayjs(parseInt(fastestPeople.time)).format('HH:mm:ss') + '打卡'
          getData(`getUserShowInfo?userID=${fastestPeople.id}`, (data) => {
            if (data.image) this.query('.fastest img').src = data.image
          })
          // 投入最多的人
          this.query('.money .name').innerText = moneyPeople.name
          this.query('.money .right').innerText = '至少分得' + moneyPeople.money + '元'
          getData(`getUserShowInfo?userID=${moneyPeople.id}`, (data) => {
            if (data.image) this.query('.money img').src = data.image
          })
          // 最晚打卡的人
          this.query('.last .name').innerText = lastPeople.name
          this.query('.last .right').innerText = dayjs(parseInt(fastestPeople.time * 1000)).format('HH:mm:ss') + '打卡'
          getData(`getUserShowInfo?userID=${lastPeople.id}`, (data) => {
            if (data.image) this.query('.last img').src = data.image
          })

          this.query('.other-title-bar span').innerHTML = `${successNum}/${joinNum}的参与者已打卡`
          this.query('.other-people').style.display = 'block'
        } else {
          this.query('.other-people').style.display = 'none'
        }

        if (dakaList[userInfo.id]) {
          this.query('.no-button').innerHTML = `已成功打卡!`
          this.$el.classList.add('not-started')
          this.$el.classList.remove('attended')
          return
        }
        if (data.finish === 1) {
          this.query('.no-button').innerHTML = `已结束!`
          this.$el.classList.add('not-started')
          this.$el.classList.remove('attended')
          return
        }
        this.$el.classList.remove('not-started')
        
        this.query('.info').innerText = `每天${getTimeStr(dakaTime[0])}-${getTimeStr(dakaTime[1])}打卡`
        // 判断是否可以参加挑战
        var dateObj = new Date();
        const nowTime = dateObj.getHours() * 3600 + dateObj.getMinutes() * 60
        if (dakaTime[0] < nowTime && nowTime < dakaTime[1]) {
          // 判断是否登录
          if (userInfo) {
            // 判断我又没有参加过这个挑战
            if (joinPeopleList[userInfo.id]) {
              this.$el.classList.add('attended')
              this.$el.classList.remove('not-started')
            }
          }
        } else {
          this.query('.no-button').innerHTML = `未到活动时间${getTimeStr(dakaTime[0])}-${getTimeStr(dakaTime[1])}`
          this.$el.classList.add('not-started')
        }
      })
    },
    joinGame: function () {
      owo.script.propShow.showProp(`参与此项挑战你需要支付${this.data.joinMoney}元入场费，打卡挑战期数为12期，每1天为一期，打卡时间为9：00-10：00，挑战成功即可与其它胜利者瓜分奖池奖金，挑战成功人数越少您分得的奖金越多。`, () => {
        owo.script.propShow.hideProp()
        // owo.go('wallet', 'view-showbox=my')
        // owo.tool.toast('您的余额不足!')
        if (!userInfo || !userInfo.token || !userInfo.id) {
          owo.tool.toast('您还未登录!')
          owo.go('login/view-loginContent=login/moveToLeft/moveFromRight//moveToRight/moveFromLeft')
          return
        }
        const roomID = _owo.getQueryVariable().id
        getData(`joinGame?roomID=${roomID}&token=${userInfo.token}&userID=${userInfo.id}&money=${this.data.joinMoney}`, (data) => {
          owo.tool.toast('参加挑战成功!')
          owo.script.info.show()
        })
      })
    },
    changeNumber: function (num) {
      this.data.joinMoney = parseInt(num)
      this.handleEvent(this, this.query('.set-money'))
    },
    dakaCallBack: function (res) {
      if (res.ret === 0) {
        // 获取房间信息
        const roomID = _owo.getQueryVariable().id
        console.log(res)
        getData(`/clockIn?ticket=${res.ticket}&randstr=${res.randstr}&token=${userInfo.token}&userID=${userInfo.id}&roomID=${roomID}&name=${owo.script.info.data.roomName}&userName=${userInfo.username}`, (data) => {
          owo.tool.toast('打卡成功!')
          owo.script.info.show()
        })
      }
    }
  }
</script>


<style lang="less">
.info-page {
  background-color: #f8f8f8;
  overflow: auto;
}
.conn {
  width: 100%;
  margin-top: -60px;
  z-index: 9;
  transform: translate3d(0,0,0);
}
.card {
  background-color: white;
  width: 90%;
  margin: 20px auto;
  border-radius: 10px;
  padding: 2vw;
  box-shadow: 1px 1px 5px #cacaca;
}
.main-image {
  width: 100%;
  display: block;
}
.title-bar {
  display: flex;
  justify-content: space-between;
  line-height: 30px;
  height: 30px;
  h2 {
    font-size: 16px;
    color: #333;
  }
  h3 {
    font-size: 12px;
    color: #888;
    font-weight: normal;
    span {
      color: gold;
      font-size: 20px;
      font-weight: bold;
      margin: 0 2px;
    }
  }
}
.info {
  font-size: 14px;
  color: #888;
  line-height: 24px;
  height: 24px;
}
.progress-box {
  height: 8px;
  background-color: bisque;
  margin: 10px 0;
  border-radius: 4px;
  overflow: hidden;
  .progress {
    height: 100%;
    width: 0%;
    transition: width 1s;
    background-color: #009fe9;
  }
}
.user-show {
  display: flex;
  margin-top: 15px;
  font-size: 14px;
  height: 30px;
  line-height: 30px;
  color: coral;
  justify-content: space-between;
  align-items: center;
}
.user-image-box {
  display: flex;
  img {
    width: 25px;
    height: 25px;
    margin-left: -5px;
    display: block;
  }
}
.join-button {
  width: 70%;
  margin: 0 auto;
  text-align: center;
  background-color: orangered;
  border-radius: 25px;
  padding: 2px 0;
  margin-top: 20px;
  box-shadow: 1px 1px 4px #8c2809;
  font-size: 20px;
  line-height: 45px;
  color: white;
}
.daka-button {
  width: 70%;
  margin: 0 auto;
  text-align: center;
  background-color: #009fe9;
  border-radius: 25px;
  padding: 2px 0;
  margin-top: 20px;
  box-shadow: 1px 1px 4px #4442bd;
  font-size: 20px;
  line-height: 45px;
  color: white;
  display: none;
}
.no-button {
  width: 70%;
  margin: 0 auto;
  text-align: center;
  background-color: #ccc;
  border-radius: 25px;
  padding: 2px 0;
  margin-top: 20px;
  box-shadow: 1px 1px 4px #79807b;
  font-size: 17px;
  line-height: 45px;
  color: #666;
  display: none;
}
.other-title-bar {
  display: flex;
  line-height: 30px;
  justify-content: space-between;
  h2 {
    font-size: 16px;
    font-weight: normal;
  }
  span {
    font-size: 12px;
    color: #888;
  }
}
.other-people {
  li:last-child {
    border-bottom: none;
  }
  li {
    display: flex;
    justify-content: space-between;
    height: 90px;
    align-items: center;
    border-bottom: 1px solid #ffe0e0;
  }
  .left {
    position: relative;
    width: 220px;
    height: 80px;
    img {
      width: 55px;
      position: absolute;
      top: 10px;
      left: 2px;
      margin: auto;
    }
    span {
      position: absolute;
      background-color: cornflowerblue;
      color: white;
      font-size: 12px;
      padding: 1px 5px;
      border-radius: 14px;
      left: 1px;
      bottom: 2px;
      width: 50px;
      text-align: center;
      margin: auto;
    }
    .name {
      position: absolute;
      top: 0;
      bottom: 0;
      margin: auto;
      line-height: 40px;
      height: 40px;
      left: 75px;
      font-size: 18px;
    }
  }
  .right {
    color: #888;
  }
}
.join-card {
  .title {
    line-height: 30px;
  }
  span {
    background-color: #ccc;
    color: white;
    padding: 2px 12px;
    border-radius: 5px;
    margin-right: 5px;
    line-height: 26px;
    font-size: 16px;
  }
  .active {
    background-color: #009fe9;
  }
}
</style>